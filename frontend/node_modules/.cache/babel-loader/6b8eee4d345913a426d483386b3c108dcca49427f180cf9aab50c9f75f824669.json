{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\React..Node..Bytebux\\\\task-manager-app\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// App.js or any parent component\nimport React, { useEffect, useState } from 'react';\nimport TaskList from './TaskList';\nimport axios from 'axios'; // Assuming you use axios for API requests\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  useEffect(() => {\n    fetchTasks(); // Fetch tasks when component mounts\n  }, []);\n  const fetchTasks = async () => {\n    try {\n      const response = await axios.get('/tasks'); // Assuming you have backend API route for fetching tasks\n      setTasks(response.data); // Assuming response.data is an array of tasks\n    } catch (error) {\n      console.error('Error fetching tasks:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Task Manager App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TaskList, {\n      tasks: tasks\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"bBd6yqkqV9dlkj9ENgRyXKaiXpk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","TaskList","axios","jsxDEV","_jsxDEV","App","_s","tasks","setTasks","fetchTasks","response","get","data","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/React/React..Node..Bytebux/task-manager-app/frontend/src/App.js"],"sourcesContent":["// App.js or any parent component\nimport React, { useEffect, useState } from 'react';\nimport TaskList from './TaskList';\nimport axios from 'axios'; // Assuming you use axios for API requests\n\nconst App = () => {\n  const [tasks, setTasks] = useState([]);\n\n  useEffect(() => {\n    fetchTasks(); // Fetch tasks when component mounts\n  }, []);\n\n  const fetchTasks = async () => {\n    try {\n      const response = await axios.get('/tasks'); // Assuming you have backend API route for fetching tasks\n      setTasks(response.data); // Assuming response.data is an array of tasks\n    } catch (error) {\n      console.error('Error fetching tasks:', error);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Task Manager App</h1>\n      <TaskList tasks={tasks} />\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,KAAK,MAAM,OAAO,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE3B,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEtCD,SAAS,CAAC,MAAM;IACdU,UAAU,CAAC,CAAC,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC;MAC5CH,QAAQ,CAACE,QAAQ,CAACE,IAAI,CAAC,CAAC,CAAC;IAC3B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC/C;EACF,CAAC;EAED,oBACET,OAAA;IAAKW,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBZ,OAAA;MAAAY,QAAA,EAAI;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACzBhB,OAAA,CAACH,QAAQ;MAACM,KAAK,EAAEA;IAAM;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvB,CAAC;AAEV,CAAC;AAACd,EAAA,CAtBID,GAAG;AAAAgB,EAAA,GAAHhB,GAAG;AAwBT,eAAeA,GAAG;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}