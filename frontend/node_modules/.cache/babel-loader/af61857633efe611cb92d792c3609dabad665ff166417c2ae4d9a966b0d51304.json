{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\React..Node..Bytebux\\\\task-manager-app\\\\frontend\\\\src\\\\components\\\\TaskForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './TaskForm.css'; // Ensure this CSS file is created\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskForm = ({\n  onSave,\n  taskToEdit\n}) => {\n  _s();\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [completed, setCompleted] = useState(false);\n  useEffect(() => {\n    if (taskToEdit) {\n      setTitle(taskToEdit.title);\n      setDescription(taskToEdit.description);\n      setCompleted(taskToEdit.completed);\n    }\n  }, [taskToEdit]);\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSave({\n      title,\n      description,\n      completed\n    });\n    setTitle('');\n    setDescription('');\n    setCompleted(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"task-form-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-form-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: taskToEdit ? 'Update Task' : 'Add Task'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: title,\n            onChange: e => setTitle(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: description,\n            onChange: e => setDescription(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: completed,\n              onChange: e => setCompleted(e.target.checked)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 15\n            }, this), \"Completed\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: [taskToEdit ? 'Update' : 'Add', \" Task\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskForm, \"iIxRGX9jvW+osPhBjYr8rjrPwj4=\");\n_c = TaskForm;\nexport default TaskForm;\nvar _c;\n$RefreshReg$(_c, \"TaskForm\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","TaskForm","onSave","taskToEdit","_s","title","setTitle","description","setDescription","completed","setCompleted","handleSubmit","e","preventDefault","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","required","checked","_c","$RefreshReg$"],"sources":["D:/React/React..Node..Bytebux/task-manager-app/frontend/src/components/TaskForm.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './TaskForm.css'; // Ensure this CSS file is created\r\n\r\nconst TaskForm = ({ onSave, taskToEdit }) => {\r\n  const [title, setTitle] = useState('');\r\n  const [description, setDescription] = useState('');\r\n  const [completed, setCompleted] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (taskToEdit) {\r\n      setTitle(taskToEdit.title);\r\n      setDescription(taskToEdit.description);\r\n      setCompleted(taskToEdit.completed);\r\n    }\r\n  }, [taskToEdit]);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    onSave({ title, description, completed });\r\n    setTitle('');\r\n    setDescription('');\r\n    setCompleted(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"task-form-container\">\r\n      <div className=\"task-form-card\">\r\n        <h2>{taskToEdit ? 'Update Task' : 'Add Task'}</h2>\r\n        <form onSubmit={handleSubmit}>\r\n          <div className=\"form-group\">\r\n            <label>Title</label>\r\n            <input\r\n              type=\"text\"\r\n              value={title}\r\n              onChange={(e) => setTitle(e.target.value)}\r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>Description</label>\r\n            <textarea\r\n              value={description}\r\n              onChange={(e) => setDescription(e.target.value)}\r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>\r\n              <input\r\n                type=\"checkbox\"\r\n                checked={completed}\r\n                onChange={(e) => setCompleted(e.target.checked)}\r\n              />\r\n              Completed\r\n            </label>\r\n          </div>\r\n          <button type=\"submit\">{taskToEdit ? 'Update' : 'Add'} Task</button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}