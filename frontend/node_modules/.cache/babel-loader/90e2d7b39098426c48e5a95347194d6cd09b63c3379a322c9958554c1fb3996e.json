{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\React..Node..Bytebux\\\\task-manager-app\\\\frontend\\\\src\\\\components\\\\TaskForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './TaskForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskForm = ({\n  onSave,\n  taskToEdit\n}) => {\n  _s();\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [completed, setCompleted] = useState(false);\n  const [errors, setErrors] = useState({\n    title: '',\n    description: ''\n  });\n  useEffect(() => {\n    if (taskToEdit) {\n      setTitle(taskToEdit.title);\n      setDescription(taskToEdit.description);\n      setCompleted(taskToEdit.completed);\n    }\n  }, [taskToEdit]);\n  const validateText = text => {\n    const regex = /^[a-zA-Z\\s]*$/;\n    return regex.test(text);\n  };\n  const handleTitleChange = e => {\n    const value = e.target.value;\n    if (validateText(value)) {\n      setTitle(value);\n      setErrors(prevErrors => ({\n        ...prevErrors,\n        title: ''\n      }));\n    } else {\n      setErrors(prevErrors => ({\n        ...prevErrors,\n        title: 'Invalid characters'\n      }));\n    }\n  };\n  const handleDescriptionChange = e => {\n    const value = e.target.value;\n    if (validateText(value)) {\n      setDescription(value);\n      setErrors(prevErrors => ({\n        ...prevErrors,\n        description: ''\n      }));\n    } else {\n      setErrors(prevErrors => ({\n        ...prevErrors,\n        description: 'Invalid characters'\n      }));\n    }\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (errors.title || errors.description) {\n      return;\n    }\n    onSave({\n      title,\n      description,\n      completed\n    });\n    setTitle('');\n    setDescription('');\n    setCompleted(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"task-form-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-form-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: taskToEdit ? 'Update Task' : 'Add Task'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: title,\n            onChange: handleTitleChange,\n            className: errors.title ? 'invalid' : '',\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this), errors.title && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"error\",\n            children: errors.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 30\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: description,\n            onChange: handleDescriptionChange,\n            className: errors.description ? 'invalid' : '',\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this), errors.description && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"error\",\n            children: errors.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 36\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: completed,\n              onChange: e => setCompleted(e.target.checked)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 15\n            }, this), \"Completed\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: [taskToEdit ? 'Update' : 'Add', \" Task\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskForm, \"HspqzOysRxKHKG4LkRbrhq8HqJU=\");\n_c = TaskForm;\nexport default TaskForm;\nvar _c;\n$RefreshReg$(_c, \"TaskForm\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","TaskForm","onSave","taskToEdit","_s","title","setTitle","description","setDescription","completed","setCompleted","errors","setErrors","validateText","text","regex","test","handleTitleChange","e","value","target","prevErrors","handleDescriptionChange","handleSubmit","preventDefault","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","required","checked","_c","$RefreshReg$"],"sources":["D:/React/React..Node..Bytebux/task-manager-app/frontend/src/components/TaskForm.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './TaskForm.css';\r\n\r\nconst TaskForm = ({ onSave, taskToEdit }) => {\r\n  const [title, setTitle] = useState('');\r\n  const [description, setDescription] = useState('');\r\n  const [completed, setCompleted] = useState(false);\r\n  const [errors, setErrors] = useState({ title: '', description: '' });\r\n\r\n  useEffect(() => {\r\n    if (taskToEdit) {\r\n      setTitle(taskToEdit.title);\r\n      setDescription(taskToEdit.description);\r\n      setCompleted(taskToEdit.completed);\r\n    }\r\n  }, [taskToEdit]);\r\n\r\n  const validateText = (text) => {\r\n    const regex = /^[a-zA-Z\\s]*$/;  \r\n    return regex.test(text);\r\n  };\r\n\r\n  const handleTitleChange = (e) => {\r\n    const value = e.target.value;\r\n    if (validateText(value)) {\r\n      setTitle(value);\r\n      setErrors((prevErrors) => ({ ...prevErrors, title: '' }));\r\n    } else {\r\n      setErrors((prevErrors) => ({ ...prevErrors, title: 'Invalid characters' }));\r\n    }\r\n  };\r\n\r\n  const handleDescriptionChange = (e) => {\r\n    const value = e.target.value;\r\n    if (validateText(value)) {\r\n      setDescription(value);\r\n      setErrors((prevErrors) => ({ ...prevErrors, description: '' }));\r\n    } else {\r\n      setErrors((prevErrors) => ({ ...prevErrors, description: 'Invalid characters' }));\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (errors.title || errors.description) {\r\n      return;\r\n    }\r\n    onSave({ title, description, completed });\r\n    setTitle('');\r\n    setDescription('');\r\n    setCompleted(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"task-form-container\">\r\n      <div className=\"task-form-card\">\r\n        <h2>{taskToEdit ? 'Update Task' : 'Add Task'}</h2>\r\n        <form onSubmit={handleSubmit}>\r\n          <div className=\"form-group\">\r\n            <label>Title</label>\r\n            <input\r\n              type=\"text\"\r\n              value={title}\r\n              onChange={handleTitleChange}\r\n              className={errors.title ? 'invalid' : ''}\r\n              required\r\n            />\r\n            {errors.title && <span className=\"error\">{errors.title}</span>}\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>Description</label>\r\n            <textarea\r\n              value={description}\r\n              onChange={handleDescriptionChange}\r\n              className={errors.description ? 'invalid' : ''}\r\n              required\r\n            />\r\n            {errors.description && <span className=\"error\">{errors.description}</span>}\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>\r\n              <input\r\n                type=\"checkbox\"\r\n                checked={completed}\r\n                onChange={(e) => setCompleted(e.target.checked)}\r\n              />\r\n              Completed\r\n            </label>\r\n          </div>\r\n          <button type=\"submit\">{taskToEdit ? 'Update' : 'Add'} Task</button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}