{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\React..Node..Bytebux\\\\task-manager-app\\\\frontend\\\\src\\\\pages\\\\TaskManager.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport TaskList from '../components/TaskList';\nimport taskService from '../services/taskService';\n// import './TaskManager.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskManager = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  useEffect(() => {\n    fetchTasks();\n  }, []);\n  const fetchTasks = async () => {\n    try {\n      const response = await taskService.getAllTasks();\n      setTasks(response.data);\n    } catch (error) {\n      console.error('Error fetching tasks: ', error);\n    }\n  };\n  const handleAddTask = async () => {\n    try {\n      await taskService.createTask({\n        title,\n        description\n      });\n      fetchTasks();\n      setTitle('');\n      setDescription('');\n    } catch (error) {\n      console.error('Error adding task: ', error);\n    }\n  };\n  const handleDeleteTask = async id => {\n    try {\n      await taskService.deleteTask(id);\n      fetchTasks();\n    } catch (error) {\n      console.error('Error deleting task: ', error);\n    }\n  };\n  const handleTaskStatusChange = async (id, completed) => {\n    try {\n      await taskService.updateTask(id, {\n        completed: !completed\n      });\n      fetchTasks();\n    } catch (error) {\n      console.error('Error updating task status: ', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"task-manager\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Task Manager\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Task title\",\n        value: title,\n        onChange: e => setTitle(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Task description\",\n        value: description,\n        onChange: e => setDescription(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddTask,\n        children: \"Add Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TaskList, {\n      tasks: tasks,\n      onDelete: handleDeleteTask,\n      onStatusChange: handleTaskStatusChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskManager, \"jpG6WDcXLRFi9utC4IUzi5M8u7U=\");\n_c = TaskManager;\nexport default TaskManager;\nvar _c;\n$RefreshReg$(_c, \"TaskManager\");","map":{"version":3,"names":["React","useState","useEffect","TaskList","taskService","jsxDEV","_jsxDEV","TaskManager","_s","tasks","setTasks","title","setTitle","description","setDescription","fetchTasks","response","getAllTasks","data","error","console","handleAddTask","createTask","handleDeleteTask","id","deleteTask","handleTaskStatusChange","completed","updateTask","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","onDelete","onStatusChange","_c","$RefreshReg$"],"sources":["D:/React/React..Node..Bytebux/task-manager-app/frontend/src/pages/TaskManager.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport TaskList from '../components/TaskList';\r\nimport taskService from '../services/taskService';\r\n// import './TaskManager.css';\r\n\r\nconst TaskManager = () => {\r\n  const [tasks, setTasks] = useState([]);\r\n  const [title, setTitle] = useState('');\r\n  const [description, setDescription] = useState('');\r\n\r\n  useEffect(() => {\r\n    fetchTasks();\r\n  }, []);\r\n\r\n  const fetchTasks = async () => {\r\n    try {\r\n      const response = await taskService.getAllTasks();\r\n      setTasks(response.data);\r\n    } catch (error) {\r\n      console.error('Error fetching tasks: ', error);\r\n    }\r\n  };\r\n\r\n  const handleAddTask = async () => {\r\n    try {\r\n      await taskService.createTask({ title, description });\r\n      fetchTasks();\r\n      setTitle('');\r\n      setDescription('');\r\n    } catch (error) {\r\n      console.error('Error adding task: ', error);\r\n    }\r\n  };\r\n\r\n  const handleDeleteTask = async (id) => {\r\n    try {\r\n      await taskService.deleteTask(id);\r\n      fetchTasks();\r\n    } catch (error) {\r\n      console.error('Error deleting task: ', error);\r\n    }\r\n  };\r\n\r\n  const handleTaskStatusChange = async (id, completed) => {\r\n    try {\r\n      await taskService.updateTask(id, { completed: !completed });\r\n      fetchTasks();\r\n    } catch (error) {\r\n      console.error('Error updating task status: ', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"task-manager\">\r\n      <h1>Task Manager</h1>\r\n      <div className=\"task-form\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Task title\"\r\n          value={title}\r\n          onChange={(e) => setTitle(e.target.value)}\r\n        />\r\n        <textarea\r\n          placeholder=\"Task description\"\r\n          value={description}\r\n          onChange={(e) => setDescription(e.target.value)}\r\n        ></textarea>\r\n        <button onClick={handleAddTask}>Add Task</button>\r\n      </div>\r\n      <TaskList tasks={tasks} onDelete={handleDeleteTask} onStatusChange={handleTaskStatusChange} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskManager;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}